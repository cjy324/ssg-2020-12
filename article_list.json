[{"id":1,"regDate":"2020-12-19 17:19:16","updateDate":"2021-01-25 17:23:50","title":"Dev_J Blog에 오신것을 환영합니다.📣📣","body":"이 블로그는 개인 블로그이며, \r\n<br>\r\n주로 프로그래밍, IT 관련 내용을 다룰 예정입니다.","boardId":1,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":1,"commentsCount":1,"hitCount":7},{"id":2,"regDate":"2020-12-17 18:07:18","updateDate":"2021-01-25 17:23:50","title":"1강. STS 개발툴 간단 소개","body":"# < Spring Tool Suite >\r\n: 스프링 툴 스위트(STS, Spring Tool Suite)란 이클립스 기반 스프링 애플리케이션을 개발 하기 위한 개발 환경(툴)이다.\r\n\r\n### Project\r\n\r\n- 프로그램을 만들기 위한 파일들을 모아놓은 폴더\r\n\r\n### src\r\n\r\n- 패키지들을 모아놓는 폴더\r\n\r\n### package\r\n\r\n- 각각의 기능을 수행하는 클래스들을 모아놓은 폴더\r\n\r\n### class\r\n\r\n- 각각의 기능을 수행하는 소스코드 묶음\r\n\r\n\r\n\r\n# < 기본 단축어 정리 >\r\n\r\n* 새 프로젝트 만들기 단축키: alt+shift+N\r\n* **자동 완성 기능: ctrl+space**\r\n* **저장: ctrl+S**\r\n* **자동 줄맞춤: ctrl+shift+F**\r\n* **블록 주석:  ctrl+shift+/**\r\n* **주석 풀기: ctrl+shift+\\\\**\r\n* **코드 실행: ctrl+F11**\r\n* **import java util: ctrl+shift+O**\r\n* 문장 맨 앞으로: Home\r\n* 문장 맨 뒤로: End\r\n* 빨간줄 발생시 커서 위치시키고 ctrl+1\r\n* **동일 변수명 한번에 바꾸기 단축키: alt+shift+r**\r\n* Home : 줄에서 맨 앞으로 이동\r\n* End : 줄에서 맨 뒤으로 이동\r\n* Ctrl + Home : 맨 위으로 이동\r\n* Ctrl + End : 맨 아래으로 이동\r\n* Ctrl + Z : 이전 히스토리로 한 단계 이동\r\n* Ctrl + Y : 이후 히스토리로 한 단계 이동\r\n\r\n\r\n# < 그 외 소소한 Tip's >\r\n- 파일명은 무조건 대문자, 띄어쓰기는 불가, 문자별 첫문자는 대문자\r\n\r\n- 프로그램의 시작 폴더는 \"Main\" 하나 만들고 시작\r\n\r\n- 왼쪽의 녹색 점(Break point)이 생성되면 다시 더블 클릭해서 삭제 가능(참고로 break point를 찍고 디버깅을 실시하면 그 포인트에서 진행이 걸리게(?) 되는데 소스코드의 문제점 등을 파악할 때 유용하다)\r\n\r\n- System.out 은 출력 개념, System.in은 입력 개념\r\n\r\n","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":1,"commentsCount":0,"hitCount":1},{"id":3,"regDate":"2020-12-17 18:38:39","updateDate":"2021-01-25 17:23:50","title":"2강. Scanner객체를 통한 입력","body":"내가 원하는 명령어 입력하고 이 명령어를 컴퓨터에게 올바르게 인식시키기 위해 JAVA에선 **Scanner 유틸**을 사용한다.\r\n<br>\r\n\r\n별도의 입력없이\r\n**Scanner scanner = new Scanner(System.in);** 라고 작성하면 **Scanner** 부분에 밑줄이 생긴다.\r\n\r\n이때 **Scanner에 커서를 올려두고 'ctrl+shift+O'를 누르면,**\r\n\r\n**상단에 import java.util.Scanner; 라고 자동으로 유틸을 불러올 수 있다.**\r\n\r\n(자바에는 사용하기 편리하게 몇가지 유용한 유틸들이 라이브러리에 이미 저장되어 있다.)\r\n<br>\r\n\r\n이후에 예를 들어\r\n\r\nString command = scanner.nextLine(); 라는 객체를 만들고 실행을 하면\r\n\r\n콘솔창에서 명령어를 입력할 수 있게 된다.\r\n<br>\r\n\r\n또한 Scanner 객체를 생성한 후 하단에는 scanner.close();이라고 작성해 주는 것이 좋다.\r\n\r\n(scanner.close();을 꼭 작성하지 않아도 실행하는 데 문제는 없지만 그래도 클린 코드를 위해 작성하도록 하자)\r\n\r\n* * *\r\n\r\n\r\n**예시**\r\n\r\n``` java\r\nimport java.util.Scanner;  //Scanner 유틸을 불러온 것\r\n\r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner scanner = new Scanner(System.in);\r\n\t\t\r\n\t\tString command = scanner.nextLine();\r\n\t\t\r\n\t\tscanner.close();   //마지막에는 scanner를 종료시켜주는 것이 좋다\r\n\r\n\t}\r\n\r\n}\r\n```","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":1},{"id":4,"regDate":"2020-12-20 19:27:12","updateDate":"2021-01-25 17:23:50","title":"3강. println(), printf()를 통한 출력","body":"입력을 했다면 다음은 **출력**이다.\r\n\r\nJAVA에서 출력은 **System.out.println()** 과 **System.out.printf()** 을 활용해 수행할 수 있다.\r\n\r\n이 둘은 비슷하지만 그 사용법과 결과물에서 조금 차이가 있다.\r\n<br>\r\n아래 예시를 통해 그 차이를 살펴보자.\r\n\r\n### 1. System.out.println()\r\n```java\r\n//1.문장 출력\r\nSystem.out.println(\"명령어\");\r\n//출력 결과: 명령어\r\n\t\t\t\t\r\n//2.변수 출력\r\nint a = 50;\r\nSystem.out.println(a);\r\n//출력 결과: 50\r\n\t\t\t\t\r\n//3.문장 + 변수 출력\r\nSystem.out.println(\"a = \" + a + \"이다.\");\r\n//출력 결과: a = 50이다.\r\n\r\n//4.연속으로 사용하면 아래방향으로 출력이 진행된다.\r\nSystem.out.println(\"명령어1\");\r\nSystem.out.println(\"명령어2\");\r\nSystem.out.println(\"명령어3\");\r\n/*출력 결과: 명령어1\r\n            명령어2\r\n            명령어3    */\r\n```\r\n<br><br>\r\n\r\n### 2. System.out.printf()\r\n```java\r\n//1.문장 출력\r\nSystem.out.printf(\"명령어\");\r\n//출력 결과: 명령어\r\n\t\t\t\t\r\n//2.변수 출력\r\nint a = 50;\r\nSystem.out.printf(\"%d\",a);\r\n//출력 결과: 50\r\n\r\n/*\r\n여기서 println()과 다른점은 위와 같이 변수만 입력해서는 출력이 진행되지 않는다는 점이다. \"%d\"와 같이 각 변수 타입에 맞는 명령어를 입력해주어야 그 자리에 원하는 변수 값을 치환시켜 출력할 수 있다.\r\n\r\n-변수 타입과 치환명령어 (예시)\r\n\r\nint => %d\r\nfloat => %f\r\nString => %s\r\n...\r\n이 외에도 다양한 치환명령어가 존재한다.\r\n*/\r\n\r\n\t\t\t\t\r\n//3.문장 + 변수 출력\r\nSystem.out.printf(\"a = \" + a + \"이다.\");\r\n//출력 결과: a = 50이다.\r\n\r\n//4.연속으로 사용하면 println()와 다르게 가로방향으로 출력이 진행된다.\r\nSystem.out.printf(\"명령어1\");\r\nSystem.out.printf(\"명령어2\");\r\nSystem.out.printf(\"명령어3\");\r\n//출력 결과: 명령어1명령어2명령어3\r\n\r\n/*\r\n만약 printf()로 println()와 같이 아래방향으로 출력을 진행시키고 싶다면 명령어 뒤에 \"\\n\"을 입력해주면 된다.\r\n\r\nSystem.out.printf(\"명령어1\\n\");\r\nSystem.out.printf(\"명령어2\\n\");\r\nSystem.out.printf(\"명령어3\\n\");\r\n/*출력 결과: 명령어1\r\n            명령어2\r\n            명령어3    */\r\n\r\n*/\r\n```","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":1},{"id":5,"regDate":"2020-12-20 19:39:22","updateDate":"2021-01-25 17:23:51","title":"4강. 기본 자료형(데이터 타입)","body":"JAVA에서의 기본 자료형(데이터 타입) 정리한 표이다.\r\nJAVA에서 변수는 매우 중요한 역할을 하므로 이 표를 통해 각 변수의 특징에 대해 알아두는 것이 좋다. \r\n<br>\r\n\r\n#### <기본 자료형>\r\n\r\n<table style=\"border-collapse: collapse; width: 100%; height: 586px;\" border=\"1\" data-ke-style=\"style8\"><tbody><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 69px;\" width=\"85\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>유형</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>종류</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>표현 가능 범위</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>메모리 크기</b></span></p></td></tr><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 300px;\" rowspan=\"4\" width=\"85\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>정수형</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">byte</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">-128 ~ 127</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">1 byte</span></p></td></tr><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">short</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">-32,768 ~ 32,767</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2 byte</span></p></td></tr><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">Int</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">-2,147,483,648 ~ 2,147,483,647</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">4 byte</span></p></td></tr><tr style=\"height: 93px;\"><td style=\"text-align: center; height: 93px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">long</span></p></td><td style=\"text-align: center; height: 93px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">- 9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807</span></p></td><td style=\"text-align: center; height: 93px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">8 byte</span></p></td></tr><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 79px;\" rowspan=\"2\" width=\"85\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>실수형</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">float</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">1.4E-45 ~ 3.4028235E38</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">4 byte</span></p></td></tr><tr style=\"height: 10px;\"><td style=\"text-align: center; height: 10px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">double<br>(float보다 2배 크기)</span></p></td><td style=\"text-align: center; height: 10px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">4.9E-324 ~ 1.7976931348623157E308</span></p></td><td style=\"text-align: center; height: 10px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">8 byte</span></p></td></tr><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 69px;\" width=\"85\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>문자형</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">char</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">모든 유니코드 문자</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2 byte</span></p></td></tr><tr style=\"height: 69px;\"><td style=\"text-align: center; height: 69px;\" width=\"85\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><b>논리형</b></span></p></td><td style=\"text-align: center; height: 69px;\" width=\"142\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">boolean</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"274\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">true, false</span></p></td><td style=\"text-align: center; height: 69px;\" width=\"101\"><p><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">1 byte</span></p></td></tr></tbody></table>","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":1},{"id":6,"regDate":"2020-12-22 18:27:10","updateDate":"2021-01-25 17:23:51","title":"YouTube 영상 테스트입니다.","body":"\r\n# 영상 테스트\r\n\r\n```youtube\r\nIUI2O8g2Rs4\r\n```\r\n\r\n출처:몰입코딩","boardId":1,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":3},{"id":7,"regDate":"2020-12-22 19:09:39","updateDate":"2021-01-25 17:23:51","title":"5강. 비교연산자","body":"JAVA에서 두 수의 크기를 비교하고 싶을 때에는 **비교연산자**를 사용할 수 있다.\r\n\r\n비교연산자의 종류는 다음과 같다.\r\n```\r\n ==,  <,  <=,  >,  >=,  !=\r\n```\r\n\r\n\r\n\r\n\r\n수학에서 쓰이는 기호와 같다고 생각하면 된다.\r\n<br>\r\n\r\n단, 사용시 주의할 점은 \" = \" 기호를 쓸 때 일반 수학에서는 하나만 입력해도 되지만 JAVA에서는 \" == \" 처럼 2개를 입력해야 한다.\r\n\r\n또한 \" >= \", \" <= \" 기호를 입력할 때에는 반드시 \" > \", \" < \" 기호가 \" = \" 기호 앞에 위치해야 한다는 점을 명심하자.\r\n<br>\r\n\r\n### 예시\r\n\r\n```java\r\nint a = 20;\r\nint b = 20;   \r\n\r\n// a와 b가 같은지 비교하는 연산자\r\n    System.out.println(a == b);    \r\n    // 결과: true\r\n\t\t    \r\n// a가 b보다 작은지 비교하는 연산자\r\n    System.out.println(a < b);\r\n    // 결과: false\r\n\t\t    \r\n// a가 b보다 작거나 같은지 비교하는 연산자\r\n    System.out.println(a <= b);\r\n    // 결과: true\r\n\t\t    \r\n// a가 b보다 큰지 비교하는 연산자\r\n    System.out.println(a > b);      \r\n    // 결과: false\r\n\r\n// a가 b보다 크거나 같은지 비교하는 연산자\r\n    System.out.println(a >= b);     \r\n    // 결과: true\r\n\t\t    \r\n// a와 b가 다른지 비교하는 연산자\r\n    System.out.println(a != b);   \r\n    // 결과: false \r\n```","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":1,"commentsCount":0,"hitCount":0},{"id":8,"regDate":"2020-12-28 18:14:33","updateDate":"2021-01-25 17:23:51","title":"6강. 논리연산자","body":"# 논리연산자\r\n\r\n## &&\r\n'**AND 연산자**', '**그리고 연산자**', true && true라면 true값을, true && false 라면 false의 결과를 나타낸다.\r\n<br>\r\n## ||\r\n'**OR 연산자**', '**또는 연산자**', true || true라면 true값을, true || false 라면 true의 결과를 나타낸다.\r\n<br>\r\n## 예시)\r\n```java\r\nint a = 15;\r\nint b = 16;\r\n\r\n\t\t\r\n/* && : AND 연산자 */\r\n\r\nif(a == 15 && b == 16) {\r\n\tSystem.out.println(true);\r\n}\r\n//해석: a는 15이고 b도 16이면 true를 출력\r\n//출력 결과: true\r\n\r\n\r\n\t\t\r\n/* || : OR 연산자 */\r\n\r\nif(a == 15 || b == 30) {\r\n\tSystem.out.println(true);\r\n}\r\n//해석: a가 15이거나 b가 30이면 true를 출력\r\n//출력 결과: true\r\n```","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":9,"regDate":"2020-12-28 18:15:22","updateDate":"2021-01-25 17:23:52","title":"7강. 삼항연산자","body":"# 삼항연산자\r\n\r\n## 개념\r\n\r\n간단한 조건을 확인할 수 있는 연산자로 '**조건연산자**'라고도 한다.\r\n<br>\r\n원하는 조건에 부합하는 결과를 얻고 싶을때 대표적으로 if()함수를 사용하지만, **간단한 조건을 확인할 때에는 삼항연산자도 자주 사용**된다.\r\n<br>\r\n삼항연산자의 문법은 다음과 같다.\r\n\r\n```\r\n조건 ? 참일 경우 실행할 내용 : 거짓일 경우 실행할 내용;\r\n```\r\n<br>\r\n예시를 통해 사용법을 알아보자\r\n<br>\r\n## 예시\r\n```java\r\nint a = 10;\r\nint b = 16;\r\n\t\t\r\nSystem.out.println(a > b ? true : false);\r\n/*해석: \r\n\t조건: a > b\r\n\t조건에 부합한다면(맞다면): true\r\n\t조건에 부합하지 않다면(틀리면): false\r\n*/\r\n//출력 결과: false\r\n\t\t\r\n\t\t\r\nint c = 30;\r\nint d = 40;\r\n\t\t\r\nSystem.out.println(c >= d ? c : d);\r\n/*해석: \r\n\t조건: c >= d\r\n\t조건에 부합한다면(맞다면): c\r\n\t조건에 부합하지 않다면(틀리면): d\r\n*/\r\n//출력 결과: 40\r\n```","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":10,"regDate":"2020-12-28 18:15:22","updateDate":"2021-01-25 17:23:52","title":"8강. 변수","body":"# 변수\r\n\r\n## 변수의 기본 속성\r\n\r\n- **변수에는 오직 한개의 값만 선언될 수 있다.**\r\n- **변수는 자신이 선언된(속한) 공간을 벗어날 수 없다.**\r\n\r\n```\r\n    예를 들어, 반복문 안에 변수를 선언하면 반복이 계속될 동안 변수는 그 영역 안에서 계속 변경될 수 있지만, 외부 영역(여기에서는 반복문 외부를 뜻함)에는 영향을 미치지 못한다. 하지만, 변수를 반복문 영역 밖으로 빼내고 반복문보다 위쪽에 위치시키면, 그 변수의 값은 반복문의 영향을 받지 않는다.\r\n```\r\n<br>\r\n## 변수의 종류\r\n\r\n - 변수의 종류는 **'변수가 선언된 위치'** 에 의해 결정된다.\r\n - 종류로는 **인스턴스 변수**, **클래스변수**, **지역변수**가 있다.\r\n\r\n![image](https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdScUgz%2FbtqLFSwo2qn%2FokVUtvk47Ds2KjtKE1OSTk%2Fimg.jpg)\r\n(출처: itmining.tistory.com/20)\r\n\r\n```\r\n※ 변수의 유지 조건 ※\r\n- 객체(인스턴스)가 살아있는 동안 유지 = 인스턴스 변수\r\n- 함수(매서드)가 실행되는 동안만 유지 = 지역변수\r\n```\r\n\r\n<br>\r\n## 변수별 특징\r\n\r\n1. **인스턴스 변수**\r\n   - 인스턴스가 생성될 때 생성됨\r\n   - 인스턴스마다 **고유의 값**을 가질 수 있음\r\n   <br>\r\n2. **클래스 변수**\r\n   - 인스턴스 변수에 **static**을 붙여준 것\r\n   - 인스턴스 변수는 각각의 고유한 값을 가지지만 클래스 변수는 모든 인스턴스가 **공통된 값을 공유**하게 됨\r\n   - 클래스가 로딩 시 생성되고 종료 시 까지 유지되는 변수에는 public을 붙여주어야 함\r\n   - public이 붙은 변수는 전역 변수라 하며, 동일 프로그램 내에서 어디서든 접근이 가능함\r\n   - 인스턴스 전근법과 다르게 인스턴스를 생성하지 않고 \"클래스이름.클래스변수명\"으로도 접근이 가능함\r\n     <br>\r\n3. **지역 변수**\r\n   - **메서드 내**에서 선언됨\r\n   - **메서드 내에서만** 사용이 가능한 변수\r\n   - 메서드 실행 시 메모리가 할당되며(생성되며) **메서드 종료 시 기능을 상실**\r\n   <br>\r\n4. **레퍼런스 변수**\r\n   - **하나의 객체가 여러 기능을 원격으로 조종**할 수 있는 **리모컨 기능**을 갖고 있는 객체가 되는 것을 레퍼런스 변수라 함\r\n```\r\n참조(reference)는 심볼릭 링크(symbolic link) 혹은 바로가기(윈도우)를 만드는 것과 비슷하다.\r\n원본 파일에 대해서 심볼릭 링크를 만들면 원본이 수정되면 심볼릭 링크에도 그 내용이 실시간으로 반영되는 것과 같은 효과다.\r\n심볼릭 링크를 통해서 만든 파일은 원본 파일에 대한 주소 값이 담겨 있다.\r\n누군가 심볼릭 링크에 접근하면 컴퓨터는 심볼릭 링크에 저장된 원본의 주소를 참조해서 원본의 위치를 알아내고 원본에 대한 작업을 하게 된다.\r\n\r\n다시 말해서 원본을 복제한 것이 아니라 원본 파일을 참조(reference)하고 있는 것 이다. 덕분에 저장 장치의 용량을 절약할 수 있고, 원본 파일을 사용하고 있는 모든 복제본이 동일한 내용을 유지할 수 있게 된다. 참조는 전자화된 세계의 극치라고 할 수 있다.\r\n\r\n(출처: opentutorials.org/module/2495/14152)\r\n```\r\n\r\n","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":1,"commentsCount":1,"hitCount":3},{"id":11,"regDate":"2021-01-06 21:48:37","updateDate":"2021-01-25 17:23:52","title":"1강. HTML & CSS & JS의 개념 및 역할","body":"하나의 웹페이지는 **HTML,** **CSS,** **JS**로 구성되어 있다.  **HTML,** **CSS,** **JS**는 각각 자신들만의 역할을 담당하고 있는데, 그 역할들을 잘 조합하면 하나의 웹페이지를 만들어 낼 수 있다. \r\n\r\n 이러한 **HTML,** **CSS,** **JS**을 다루는 것을 **'웹코딩'** 이라 한다. \r\n \r\n 지금부터 각각의 기본적인 개념과 역할들을 알아보자.\r\n<br>\r\n\r\n# < HTML >\r\n####  주요 역할 : 문서 내용 담당[배우]\r\n<br>\r\n- 웹페이지를 만들기 위한 언어로 웹브라우저 위에서 동작하는 언어다.\r\n- html안에는 이미  **기본 태그**와  **속성**들이 저장되어 있다.\r\n- CSS는 이 속성들을 창조하는 것이 아닌 변화시켜주는 리모컨 역할을 한다.\r\n```\r\n< HTML의 의미 >\r\n\r\nHT - HyperText, 문서와 문서가 링크로 연결되어 있다.\r\n\r\nM - Markup, 태그로 이루어져 있다.\r\n\r\nL - Language\r\n```\r\n\r\n\r\n\r\n# < CSS >\r\n\r\n####  주요 역할 : 문서 꾸밈 담당[스타일리스트]\r\n<br>\r\n- CSS는 HTML을 아름답게 꾸며주는 **디자이너의 언어**다.\r\n- 잘 설계된 CSS는 **재활용이 가능**하며 **테마, 템플릿**의 형태로 **확장**할 수 있다. \r\n- 또한 자바스크립트와 연계해 콘텐츠의 내용이나 디자인을 **동적**으로 처리할 경우에도 유용하게 사용된다.\r\n```\r\n< CSS의 의미 >\r\n\r\nC - Cascading, '폭포처럼 떨어져 내리는'이라는 사전적 의미로 상위 요소에서 정의한 속성이 하위 요소로 전달된다는 의미에서 유래했다.\r\n\r\nSS - StyleSheet, 스타일을 다루는 정체성을 보여준다.\r\n```\r\n\r\n# < JS; JavaScript >\r\n\r\n####  주요 역할: 감독[감독]\r\n<br>\r\n- JavaScript는 **객체(object)** 기반의 스크립트 언어다.\r\n- **HTML로는 웹의 내용을 작성**하고, **CSS로는 웹을 디자인**하고, **JavaScript로는 웹의 동작을 구현**할 수 있다.\r\n- JavaScript는 **동적**이며, 타입을 명시할 필요가 없는 **인터프리터 언어**다.\r\n- 따라서, 컴파일 작업이 필요하지 않고, 소스코드를 바로 실행한다.\r\n```\r\n< Java와 JavaScript >\r\n\r\nJava와 JavaScript는 그 이름만 놓고 보면 서로 관련이 있는 언어로 생각되기 쉽다.\r\n\r\n하지만 두 언어는 서로 직접적인 관련은 없으며, 비슷한 점보다는 다른 점이 훨씬 많다.\r\n\r\n문법상 비슷한 부분은 두 언어의 문법이 모두 C언어를 기반으로 만들어졌기 때문이다.\r\n\r\n(출처: http://www.tcpschool.com/javascript/js_intro_basic)\r\n\r\n```","boardId":3,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":1,"commentsCount":0,"hitCount":2},{"id":12,"regDate":"2021-01-08 18:08:22","updateDate":"2021-01-25 17:23:52","title":"2강. HTML 태그, 엘리먼트 개념 및 관계성(feat.부모,자식,형제)","body":"# HTML의 구성 개념\r\n\r\n```\r\n\r\n태그1---▶     <엘리먼트1(여는 태그)>  내용1  </엘리먼트1(닫는 태그)>     ◀---태그2\r\n태그3---▶     <엘리먼트2(여는 태그)>  내용2  </엘리먼트2(닫는 태그)>     ◀---태그4\r\n\r\n```\r\n\r\n\r\n- <  >각각을 **'태그'** 라 한다.\r\n- 서로 짝이되는(여는 태그+닫는 태그)태그를 **1개의 엘리먼트**라고 한다.\r\n- 즉, 위 내용에서 태그는 총 4개이고, 엘리먼트는 총 2개이다.\r\n- HTML에서 태그는 여러 종류가 존재하는데 이는 다음에 자세히 살펴보도록 하자.\r\n\r\n# 엘리먼트간의 관계성(feat. 부모, 자식, 형제)\r\n```html\r\n\r\n<div1>                   \r\n    <section>           \r\n        <nav></nav>    \r\n    </section>\r\n</div1>\r\n\r\n<div2></div2>   \r\n\r\n```\r\n\r\n - 각각의 엘리먼트간에는 **관계성**이 존재한다.\r\n - 위 내용에서 div1 엘리먼트의 여는태그(\\<div1>)와 닫는태그(\\</div1>) 사이에 section과 nav 엘리먼트가 위치하고 있는 것을 볼 수 있다.\r\n - 마찬가지로 section엘리먼트의 여는태그(\\<section>)와 닫는태그(\\</section>) 사이에는 nav 엘리먼트가 있는 것을 볼 수 있다.\r\n - 이 관계를 해석하면 아래와 같다.\r\n```html\r\n\r\n<div1>                           <!--section의 부모--><!--nav의 조상-->\r\n    <section>                    <!--div의 자식-->\r\n        <nav></nav>              <!--div의 후손--> <!--section의 자식-->\r\n    </section>\r\n</div1>\r\n\r\n\r\n- div1엘리먼트에 속한 자식은 section엘리먼트\r\n\r\n- section엘리먼트에 속한 자식은 nav엘리먼트\r\n\r\n- div1엘리먼트의 후손은 nav엘리먼트\r\n\r\n- nav엘리먼트의 조상은 div1엘리먼트\r\n\r\n```\r\n- 엘리먼트간의 관계성에서 **자식과 후손**은 각각의 **부모 또는 조상**으로부터 **영향을 받는다.**\r\n- **즉, 부모 또는 조상의 속성을 변경하면 자식과 후손도 속성이 변한다는 의미이다.**\r\n- 이를 적절히 활용하면 스타일을 적용할 때 모든 엘리먼트를 일일이 선택할 필요없이 부모나 조상의 스타일만 바꿔도 이에 속한 자식과 후손들의 스타일을 한번에 바꿀 수 있다.(다만, 속성에 따라 적용이 되지 않는 것도 있으니 유의하도록 하자.)\r\n<br>\r\n- 다음으로 div2 엘리먼트는 div1에 속해있지 않고 다른 위치에 있는 것을 확인할 수 있다.\r\n- 이러한 관계는 **형제관계**라 한다.\r\n\r\n```html\r\n\r\n<div1>                           <!--section의 부모--><!--nav의 조상-->\r\n    <section>                    <!--div의 자식-->\r\n        <nav></nav>              <!--div의 후손--> <!--section의 자식-->\r\n    </section>\r\n</div1>\r\n\r\n\r\n<div2></div2>                   <!--형제관계(동등)-->\r\n\r\n- div1 엘리먼트와 div2 엘리먼트는 형제관계\r\n```\r\n- 즉, div1 엘리먼트와 div2 엘리먼트는 **서로 영향을 받지 않는 동등한 관계**라는 것을 의미한다.\r\n- 웹코딩을 할 때 선택한 엘리먼트 외 다른 엘리먼트에는 영향을 끼치고 싶지 않다면 이와 같은 형제관계를 적절히 사용하도록 하자.","boardId":3,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":6},{"id":13,"regDate":"2021-01-09 13:08:43","updateDate":"2021-01-25 17:23:53","title":"Codepen 적용 테스트입니다.","body":"# Type 1 = html\r\n```codepen\r\nhttps://codepen.io/jangka44/embed/JjRyxQY?height=265&theme-id=light&default-tab=html,result\r\n```\r\n\r\n# Type 2 = html, css\r\n```codepen\r\nhttps://codepen.io/jangka44/embed/BaLdbyr?height=265&theme-id=light&default-tab=css,result\r\n```\r\n\r\n# Type 3 = html, css, editable\r\n```codepen\r\nhttps://codepen.io/jangka44/embed/BaLdbyr?height=265&theme-id=light&default-tab=css,result&editable=true\r\n```\r\n\r\n# Type 4 = html, css, dark, editable\r\n```codepen\r\nhttps://codepen.io/jangka44/embed/BaLdbyr?height=265&theme-id=dark&default-tab=css,result&editable=true\r\n```\r\n\r\n# Type 5 = html, css, js, dark, editable\r\n```codepen\r\nhttps://codepen.io/jangka44/embed/oNzeVjY?height=265&theme-id=dark&default-tab=js,result&editable=true\r\n```\r\n\r\n# Type 6 = js, console, dark, editable\r\n```codepen\r\nhttps://codepen.io/jangka44/embed/wvzqZqB?height=300&theme-id=light&default-tab=js,result&editable=true\r\n```\r\n\r\n# 테스트\r\n```codepen\r\nhttps://codepen.io/cjy324/embed/preview/poEZLJM?height=265&theme-id=light&default-tab=html,css,result&editable=true\r\n```","boardId":1,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":6},{"id":14,"regDate":"2021-01-17 23:22:09","updateDate":"2021-01-25 17:23:53","title":"1강. DB, SQL 그리고 MySQL 소개","body":"# 데이터베이스(DB; Database)\r\nMySQL을 학습하기전에 데이터베이스에 대한 간략한 개념정리를 먼저 해보자.\r\n\r\n* 데이터베이스란, **통합하여 관리되고 있는 데이터들의 집합**이다.\r\n* 즉, **정보 저장소**라고 생각하면 될 것이다.\r\n* 데이터베이스는 별도의 미들웨어에 의해 관리되는데 이러한 미들웨어를 **DBMS(Database Management System) 즉, '데이터베이스 관리시스템'** 이라 한다.\r\n(*MySql은 현재 가장 많이 사용되고 있는 관계형 데이터베이스 관리 시스템(RDBMS: Relational DBMS)이다, 자세한 내용은 아래 참고)\r\n* 또한, 데이터베이스에서 데이터를 정의, 조작 등을 수행하는 언어가 존재하는데 이를 'SQL'이라 한다.\r\n\r\n# SQL(Structured Query Language)\r\n\r\n* SQL은 데이터베이스에서 데이터를 **정의, 조작, 제어**하기 위해 사용하는 언어이다.\r\n* SQL 구문에는 목적에 따라 크게 3가지(DDL, DML, DCL)로 분류할 수 있는데 이부분에 대해선 아래 표를 통해 간략히 이해정도만 하고 넘어가도록 하자\r\n\r\n\r\n| 속성 |설명  |주요 명령어  |\r\n| --- | --- | --- |\r\n|DDL  | 데이터베이스나 테이블 등을 생성, 삭제하거나 그 구조를 변경하기 위한 명령어 |CREATE, ALTER, DROP  |\r\n| DML | 데이터베이스에 저장된 데이터를 처리하거나 조회, 검색하기 위한 명령어 | INSERT, UPDATE, DELETE, SELECT 등|\r\n|  DCL| 데이터베이스에 저장된 데이터를 관리하기 위하여 데이터의 보안성 및 무결성 등을 제어하기 위한 명령어 |GRANT, REVOKE 등  |\r\n\r\n\r\n# MySQL\r\n지금부터는 **MySQL**에 대해 본격적으로 살펴보도록 하자\r\n\r\n\r\n\r\n## MySQL의 개념\r\n* MySQL은 현재 가장 많이 사용되고 있는 ***관계형 데이터베이스 관리 시스템(RDBMS: Relational DBMS)** 이다. \r\n\r\n```\r\n*RDBMS란?\r\n - 현재 가장 많이 사용되고 있는 데이터베이스의 한 종류\r\n - 데이터의 종속성을 관계(relationship)로 표현\r\n```\r\n* MySQL은 **오픈 소스**이며, 다중 사용자와 다중 스레드를 지원한다.\r\n* 또한, C언어, C++, JAVA, PHP 등 **여러 프로그래밍 언어를 위한 다양한 API를 제공**하고 있다.\r\n* MySQL은 유닉스, 리눅스, 윈도우 등 **다양한 운영체제에서 사용**할 수 있으며, 특히 **PHP와 함께 웹 개발에 자주 사용**된다.\r\n* MySQL은 오픈 소스 라이센스를 따르기는 하지만, 상업적으로 사용할 때는 상업용 라이센스를 구입해야만 한다.\r\n\r\n## MySQL의 장점\r\n1. 오픈 소스이므로 **무료**로 사용할 수 있다.\r\n\r\n2. **다양한 운영체제**와 **프로그래밍 언어**에서 사용할 수 있다.\r\n\r\n3. 크기가 큰 데이터 집합도 **빠르고 효과적으로 처리**할 수 있다.\r\n\r\n4. **표준 SQL 형식**을 사용한다.\r\n\r\n5. MySQL 응용 프로그램을 사용자의 용도에 맞게 수정할 수 있다.\r\n\r\n\r\n## MySQL 개념도\r\n\r\n```\r\nDatabase > Table > Column, row, Data\r\n\r\n- Database\r\n:Table들의 집합\r\n\r\n- Table\r\n: Column + Row들의 집합\r\n\r\n- Column\r\n: 각각의 data 값에 대한 열\r\n\r\n- Low\r\n: 각각의 data 값에 대한 행\r\n\r\n즉, Database는 = 폴더, 저장소\r\nTable = 각각의 data들이 Column과 Low로 정렬된 표\r\n\r\n그리고\r\n\r\nDB들 + 관리프로그램이 'MySQL'이다.\r\n```\r\n\r\n## MySQL client 그리고 server\r\nMySQL에는 **Client, Server**라는 개념이 존재한다.\r\n\r\n* Client\r\n: 데이터를 수정하거나 반환하기 위해 서버에 접속하는 프로그램\r\n* Server\r\n: 주요 데이터베이스를 다루는 프로그램\r\n\r\n정리하자면, MySQL client는 MySQL sever에게 요청을 하는 **\"고객\"** 개념으로 이해하면 되고, MySQL sever는 고객의 요청을 받고 이를 DB에서 직접적으로 수행하는 **\"종업원\"** 정도로 이해하면 된다.\r\n\r\n즉, MySQL client는 MySQL sever를 관리하기 위해 사용하는 것(cmd)","boardId":4,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":15,"regDate":"2021-01-18 00:02:43","updateDate":"2021-01-25 17:23:53","title":"2강. 기초 SQL문법 정리","body":"# 기초적인 SQL 문법 정리\r\nMySQL은 **SQL 문법**을 통해 DB내 데이터를 **정의, 조작, 제어**한다. 따라서 당연하게도 **SQL 문법을 알아야만 MySQL을 다룰 수 있다.**\r\n<br>\r\n아래 표는 기초적인 SQL문법들을 정리한 표이다. 표 내용을 통해 기초적인 SQL문법들에 대해 학습하도록 하자\r\n\r\n\r\n| 종류 | DB(데이터베이스) | TABLE(테이블) | ROW(로우/행 데이터) |\r\n| --- | --- | --- | --- |\r\n| 조회 | SHOW DATABASES;<br>(모든 DB조회) |SHOW TABLES; (DB내 모든 Table조회)<br> DESC 테이블명; (Table의 구조 조회) | SELECT * FROM 테이블명<br>(Table 내 모든 컬럼(*) 조회) |\r\n| 생성 | CREATE DATABASE 이름;<br>(DB생성) | CREATE TABLE 이름 (<br> id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT, <br>regDate DATETIME NOT NULL, <br>title VARCHAR(100) NOT NULL<br>);<br>(해당 칼럼들을 가진 Table 생성) | INSERT INTO 테이블명 <br>SET regDate = NOW(), <br>title = '제목1';<br>(해당 테이블 각 해당 칼럼에 Data 삽입) |\r\n| 수정 | 없음 |ALTER TABLE 테이블명 ADD COLUMN 칼럼명 INT(10);<br>(테이블에 새로운 칼럼 추가)<br>(그 외, ADD 위치에 MODIFY, CHANGE, DROP 등을 입력해 컬럼 조작 가능)  | UPDATE 테이블명<br>SET title = '인기글'<br>WHERE id = 3;<br>(id가 3인 row의 title을 '인기'로 수정) |\r\n| 삭제 | DROP DATABASE 이름;<br>(DB삭제)| DROP TABLE 이름;<br>(Table 삭제) | DELETE FROM 테이블명<br>WHERE id = 3;<br>(id가 3인 row 삭제); |","boardId":4,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":16,"regDate":"2021-01-18 22:36:23","updateDate":"2021-01-25 17:23:54","title":"9강. 배열","body":"# 배열이란?\r\n - 배열은 **같은 타입의 데이터**를 연속된 공간에 나열시키고 각 데이터에 **인덱스(index)** 를 부여해 놓은 자료구조다.\r\n - 즉, **타입이 같은 연관된 데이터들**을 **그룹화**하여 **'배열'** 이란 **'상자'** 에 담아두는 것이다.\r\n - 배열은 프로그래밍을 할 때 아주 다양하게 활용되므로 반드시 학습해 두어야 한다.\r\n\r\n\r\n\r\n# 배열의 장점\r\n - 변수는 **한개의 데이터만 저장**할 수 있다. 따라서 저장해야 할 **데이터의 수가 많아지면** 그만큼 많은 양의 변수를 선언해줘야하는 **비효율성이 발생**한다.\r\n - 배열은 이러한 문제를 **효율적**으로 해결할 수 있다.\r\n - 연관된 데이터를 저장할 때 변수의 선언을 줄여주며, 반복문 등 반복되는 계산과정을 쉽게 처리할 수 있다.\r\n\r\n \r\n\r\n# 배열 선언 방법\r\nJAVA에서 배열의 선언 방법은 크게 **2가지**가 있다. \r\n<br>\r\n## (1) 자료형[ ] 변수명 = {데이터1, 데이터2, 데이터3};\r\n<br>\r\n#### 이 방법은 데이터 값들을 이미 알고 있을 때 활용하면 편리한 방법이다.\r\n<br>\r\n\r\n```\r\n자료형[] 변수명 = {데이터1, 데이터2, 데이터3};\r\n\r\nex) String[] data = {\"데이터1\", \"데이터2\", \"데이터3\"};\r\n \r\n \r\n<배열의 구조 해석>\r\n\r\nlength(배열의 크기(길이)) -> 3\r\nelement(데이터 값) -> 데이터1, 데이터2, 데이터3\r\nindex(구분자(번호)) -> 0, 1, 2\r\n```\r\n\r\n\r\n \r\n<br>\r\n## (2) 자료형[ ] 변수명 = new 자료형[배열의 크기(길이)];\r\n<br>\r\n#### 이 방법은 현재 데이터 값은 잘 모르지만 변수를 미리 선언해 놓고 향후에 데이터를 추가하고자 할 때 활용하면 편리한 방법이다.\r\n <br>\r\n\r\n```\r\n 자료형[] 변수명 = new 자료형[배열의 크기(길이)];\r\n \r\n    변수명[0] = 데이터1;\r\n\r\n    변수명[1] = 데이터2;\r\n\r\n    변수명[2] = 데이터3;\r\n\r\n\r\n\r\n ex) String[] data = new String[3];\r\n\r\n         data[0] = \"데이터1\";\r\n\r\n         data[1] = \"데이터2\";\r\n\r\n         data[2] = \"데이터3\";\r\n\r\n\r\n<배열의 구조 해석>\r\n\r\nlength(배열의 크기(길이)) -> 3\r\nelement(데이터 값) -> 데이터1, 데이터2, 데이터3\r\nindex(구분자(번호)) -> 0, 1, 2\r\n```\r\n<br>\r\n각 방법마다 장단점이 있으므로 꼭 한가지 방법만 활용하기 보다는 자신에게 요구되는 상황에 맞게 적절하게 선택하여 활용하는 것이 좋다.","boardId":2,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":17,"regDate":"2021-01-20 23:45:44","updateDate":"2021-01-25 17:23:54","title":"P.JSP - 개발일지(회원가입 기능 구현)","body":"\r\n# 회원가입 기능 구현\r\n - [x] 아이디 중복 여부 확인\r\n - [x] 비밀번호 확인\r\n   - [x] email,연락처 올바른 양식 확인\r\n - [x] 공란 여부 확인\r\n - [x] 알림창 확인\r\n - [x] 완료페이지 이동 확인\r\n<br>\r\n## 영상\r\n\r\n```youtube\r\nV5vZMGrp-_o\r\n```\r\n<br>\r\n## 소스코드\r\n```java\r\n// 회원가입 폼\r\n\tpublic String doJoinForm(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tHttpSession session = request.getSession();\r\n\r\n\t\t// 로그인 여부 확인\r\n\t\tif (session.getAttribute(\"loginedMemberId\") != null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"이미 로그인된 상태입니다.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\t\t\r\n\t\treturn \"usr/member/doJoinForm\";\r\n\t}\r\n\r\n\t// 회원가입\r\n\tpublic String doJoin(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tString loginId = request.getParameter(\"loginId\");\r\n\t\tString loginPw = request.getParameter(\"loginPw\");\r\n\t\tString name = request.getParameter(\"name\");\r\n\t\tString nickname = request.getParameter(\"nickname\");\r\n\t\tString email = request.getParameter(\"email\");\r\n\t\tString cellPhoneNo = request.getParameter(\"cellPhoneNo\");\r\n\r\n\t\tList<Member> members = memberService.getMemberListForPrint();\r\n\r\n\t\t// 해당 loginId가 사용가능한지 중복확인\r\n\t\tfor (int i = 0; i < members.size(); i++) {\r\n\t\t\tif (members.get(i).getLoginId().equals(loginId) == true) {\r\n\t\t\t\trequest.setAttribute(\"alertMsg\", \"해당 아이디는 이미 사용중인 아이디입니다.\");\r\n\t\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\t\treturn \"common/redirect\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 해당 nickname이 사용가능한지 중복확인\r\n\t\tfor (int i = 0; i < members.size(); i++) {\r\n\t\t\tif (members.get(i).getNickname().equals(nickname) == true) {\r\n\t\t\t\trequest.setAttribute(\"alertMsg\", \"해당 닉네임는 이미 사용중인 닉네임입니다.\");\r\n\t\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\t\treturn \"common/redirect\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMap<String, Object> joinArg = new HashMap<>();\r\n\t\tjoinArg.put(\"loginId\", loginId);\r\n\t\tjoinArg.put(\"loginPw\", loginPw);\r\n\t\tjoinArg.put(\"name\", name);\r\n\t\tjoinArg.put(\"nickname\", nickname);\r\n\t\tjoinArg.put(\"email\", email);\r\n\t\tjoinArg.put(\"cellPhoneNo\", cellPhoneNo);\r\n\r\n\t\t// 신규 회원가입\r\n\t\tint id = memberService.join(joinArg);\r\n\r\n\t\t// 생성 알림창 보여주고 회원정보로 이동하기\r\n\t\trequest.setAttribute(\"alertMsg\", id + \"번 회원님 반갑습니다.\");\r\n\r\n\t\tMember member = memberService.getMemberById(id);\r\n\r\n\t\trequest.setAttribute(\"member\", member);\r\n\r\n\t\treturn \"usr/member/doJoin\";\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n```","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":18,"regDate":"2021-01-20 23:47:40","updateDate":"2021-01-25 17:23:54","title":"P.JSP - 개발일지(로그인 기능 구현)","body":"\r\n# 로그인 기능 구현\r\n - [x] 아이디 확인\r\n - [x] 비밀번호 확인\r\n - [x] 공란 여부 확인\r\n - [x] 닉네임 + 환영메시지 알림창 확인\r\n - [x] session에 로그인 정보 기록됐는지 확인\r\n  -> 상단의 로그인 버튼이 로그아웃으로 바뀌면 O\r\n - [x] 메인페이지 이동 확인\r\n<br>\r\n# 로그아웃 기능 구현\r\n - [x] 로그인 여부 확인\r\n - [x] 로그아웃 확인\r\n  -> 상단의 로그아웃 버튼이 로그인으로 바뀌면 O\r\n<br>\r\n\r\n## 영상\r\n\r\n```youtube\r\nMJB_svUx40Y\r\n```\r\n<br>\r\n## 소스코드\r\n```java\r\n// 로그인 폼\r\npublic String doLoginForm(HttpServletRequest request, HttpServletResponse response) {\r\n\t\treturn \"usr/member/doLoginForm\";\r\n\t}\r\n\r\n// 로그인\r\npublic String doLogin(HttpServletRequest request, HttpServletResponse response) {\r\n\t\tString loginId = request.getParameter(\"loginId\");\r\n\t\tString loginPw = request.getParameter(\"loginPw\");\r\n\r\n\t\tMember member = memberService.getMemberByLoginId(loginId);\r\n\r\n\t\t// 해당 loginId가 등록된 id인지 확인\r\n\t\tif (member == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"해당 아이디는 없는 아이디입니다. 아이디를 확인하세요.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\t// 해당 loginPw가 일치하는지 확인\r\n\t\tif (member.getLoginPw().equals(loginPw) == false) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"비밀번호가 틀렸습니다.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\t// 로그인 여부를 세션에 저장\r\n\t\tHttpSession session = request.getSession();\r\n\t\tsession.setAttribute(\"loginedMemberId\", member.getId());\r\n\r\n\t\t// 로그인 알림창 보여주고 메인화면으로 이동\r\n\t\trequest.setAttribute(\"alertMsg\", member.getNickname() + \", 님 반갑습니다.\");\r\n\t\trequest.setAttribute(\"replaceUrl\", \"../home/main\");\r\n\t\treturn \"common/redirect\";\r\n\t}\r\n\r\n// 로그아웃\r\npublic String doLogout(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tHttpSession session = request.getSession();\r\n\r\n\t\t// 로그인 여부 확인\r\n\t\tif (session.getAttribute(\"loginedMemberId\") == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"이미 로그아웃 상태입니다.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\t// 로그인 여부를 세션에서 삭제\r\n\t\tsession.removeAttribute(\"loginedMemberId\");\r\n\r\n\t\trequest.setAttribute(\"alertMsg\", \"로그아웃 되었습니다.\");\r\n\t\trequest.setAttribute(\"replaceUrl\", \"../home/main\");\r\n\t\treturn \"common/redirect\";\r\n\r\n\t}\r\n\r\n\r\n```","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":19,"regDate":"2021-01-21 23:50:10","updateDate":"2021-01-25 17:23:54","title":"P.JSP - 개발일지(홈-메인화면 임시템플릿 적용)","body":"\r\n# 홈-메인화면 임시템플릿 적용\r\n - [x] 메뉴버튼별 hover\r\n - [x] 상단바 고정\r\n - [x] 공란 여부 확인\r\n - [x] 모바일용 메뉴 토글\r\n<br>\r\n\r\n## 영상\r\n\r\n```youtube\r\nETdjJbZNrFI\r\n```","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":20,"regDate":"2021-01-21 23:53:39","updateDate":"2021-01-25 17:23:55","title":"P.JSP - 개발일지(게시판별 CRUD 기능 구현)","body":"\r\n# 게시판별 CRUD 기능 구현\r\n - [x] 게시판별 게시물 리스팅\r\n - [x] Create\r\n   - [x] 로그인 회원만 가능\r\n - [x]  Read\r\n - [x]  Update\r\n   - [x] 로그인시에만 버튼 노출\r\n   - [x] 로그인 회원만 가능\r\n   - [x]  작성자만 수정 가능(권한체크)\r\n   - [x] 확인창(최소 가능)\r\n - [x]  Delete\r\n   - [x] 로그인시에만 버튼 노출\r\n   - [x] 로그인 회원만 가능\r\n   - [x]  작성자만 수정 가능(권한체크)\r\n   - [x] 확인창(최소 가능)\r\n<br>\r\n\r\n## 영상\r\n\r\n```youtube\r\nuqnKGhVZ4QA\r\n```\r\n<br>\r\n## 소스코드\r\n```java\r\n\r\n// 리스트 가져오기\r\npublic String showList(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tint boardId = Integer.parseInt(request.getParameter(\"boardId\"));\r\n\r\n\t\tList<Article> articles = articleService.getArticlesForPrintByBoardId(boardId);\r\n\r\n\t\t// 만약, 해당 게시판 번호의 게시판이 없으면 알림 메시지와 뒤로 돌아가기 실시\r\n\t\tif (articles.size() <= 0) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", boardId + \"번 게시물은 존재하지 않습니다. 게시판 번호를 확인하세요.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\trequest.setAttribute(\"articles\", articles);\r\n\r\n\t\treturn \"usr/article/list\";\r\n\t}\r\n\r\n// 게시물 상세보기\r\npublic String showDetail(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tint id = Integer.parseInt(request.getParameter(\"id\"));\r\n\r\n\t\tArticle article = articleService.getArticleById(id);\r\n\r\n\t\tif (article == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", id + \"번 게시물은 존재하지 않습니다. 게시물 번호를 확인하세요.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\trequest.setAttribute(\"article\", article);\r\n\r\n\t\treturn \"usr/article/detail\";\r\n\t}\r\n\r\n// 게시물 등록 폼\r\npublic String doWriteForm(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tHttpSession session = request.getSession();\r\n\r\n\t\t// 로그인 여부 체크\r\n\t\tif (session.getAttribute(\"loginedMemberId\") == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"로그인 후 이용가능합니다.\");\r\n\t\t\trequest.setAttribute(\"replaceUrl\", \"../member/doLoginForm\");\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\treturn \"usr/article/doWriteForm\";\r\n\t}\r\n\r\n// 게시물 등록\r\npublic String doWrite(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tHttpSession session = request.getSession();\r\n\r\n\t\tint boardId = Integer.parseInt(request.getParameter(\"boardId\"));\r\n\t\tint memberId = (int) session.getAttribute(\"loginedMemberId\");\r\n\r\n\t\tString title = request.getParameter(\"title\");\r\n\r\n\t\tString body = request.getParameter(\"body\");\r\n\r\n\t\t// 해당 게시판이 존재하는지 확인\r\n\t\tList<Article> articles = articleService.getArticlesForPrintByBoardId(boardId);\r\n\r\n\t\tif (articles.size() <= 0) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", boardId + \"번 게시판은 존재하지 않습니다. 게시판 번호를 확인하세요.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\t// 게시물 생성\r\n\t\tint id = articleService.add(boardId, title, body, memberId);\r\n\r\n\t\t// 생성 알림창 보여주고 detail로 이동하기\r\n\t\trequest.setAttribute(\"alertMsg\", id + \"번 게시물이 생성되었습니다.\");\r\n\t\trequest.setAttribute(\"replaceUrl\", String.format(\"detail?id=%d\", id));\r\n\t\treturn \"common/redirect\";\r\n\r\n\t}\r\n\r\n// 게시물 수정 폼\r\npublic String doModifyForm(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tHttpSession session = request.getSession();\r\n\t\t\r\n\t\t// 로그인 여부 체크\r\n\t\tif (session.getAttribute(\"loginedMemberId\") == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"로그인 후 이용가능합니다.\");\r\n\t\t\trequest.setAttribute(\"replaceUrl\", \"../member/doLoginForm\");\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\tint memberId = (int) session.getAttribute(\"loginedMemberId\");\r\n\r\n\t\t// 해당 게시판이 존재하는지 확인\r\n\t\tint id = Integer.parseInt(request.getParameter(\"id\"));\r\n\r\n\t\tArticle article = articleService.getArticleById(id);\r\n\r\n\t\tif (article == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", id + \"번 게시물은 존재하지 않습니다. 게시물 번호를 확인하세요.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\t// 작성자 본인 여부 체크\r\n\t\tif (article.getMemberId() != memberId) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"작성자만 수정이 가능합니다.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\trequest.setAttribute(\"article\", article);\r\n\r\n\t\treturn \"usr/article/doModifyForm\";\r\n\t}\r\n\r\n// 게시물 수정\r\npublic String doModify(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tint id = Integer.parseInt(request.getParameter(\"id\"));\r\n\t\tString title = request.getParameter(\"title\");\r\n\t\tString body = request.getParameter(\"body\");\r\n\r\n\t\t// 게시물 수정\r\n\t\tarticleService.articleModify(id, title, body);\r\n\r\n\t\t// 수정 알림창 보여주고 detail로 이동하기\r\n\t\trequest.setAttribute(\"alertMsg\", id + \"번 게시물이 수정되었습니다.\");\r\n\t\trequest.setAttribute(\"replaceUrl\", String.format(\"detail?id=%d\", id));\r\n\t\treturn \"common/redirect\";\r\n\r\n\t}\r\n\r\n// 게시물 삭제\r\npublic String doDelete(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tHttpSession session = request.getSession();\r\n\r\n\t\t// 로그인 여부 체크\r\n\t\tif (session.getAttribute(\"loginedMemberId\") == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"로그인 후 이용가능합니다.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\r\n\t\tint memberId = (int) session.getAttribute(\"loginedMemberId\");\r\n\r\n\t\t\r\n\t\t// 해당 게시판이 존재하는지 확인\r\n\t\tint id = Integer.parseInt(request.getParameter(\"id\"));\r\n\r\n\t\tArticle article = articleService.getArticleById(id);\r\n\r\n\t\tif (article == null) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", id + \"번 게시물은 존재하지 않습니다. 게시물 번호를 확인하세요.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\t\t\r\n\t\t// 작성자 본인 여부 체크\r\n\t\tif (article.getMemberId() != memberId) {\r\n\t\t\trequest.setAttribute(\"alertMsg\", \"작성자만 삭제가 가능합니다.\");\r\n\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\treturn \"common/redirect\";\r\n\t\t}\r\n\t\t\r\n\t\t// 게시물 삭제\r\n\t\tarticleService.articleDelete(id);\r\n\r\n\t\t// 삭제 알림창 보여주고 리스트로 이동하기\r\n\t\trequest.setAttribute(\"alertMsg\", id + \"번 게시물이 삭제되었습니다.\");\r\n\t\trequest.setAttribute(\"replaceUrl\", String.format(\"list?boardId=%d\", article.getBoardId()));\r\n\t\treturn \"common/redirect\";\r\n\r\n\t}\r\n\r\n\r\n```\r\n","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":21,"regDate":"2021-01-22 00:00:42","updateDate":"2021-01-25 17:23:55","title":"P.JSP - 개발일지(회원가입 기능 추가(ajax통신으로 중복체크 ))","body":"\r\n# 회원가입 기능 추가(ajax통신으로 중복체크 )\r\n - [x] 중복체크 미수행시 알림창\r\n - [x] 사용가능 메시지 + code 알림창\r\n - [x] 사용불가 메시지 + code  알림창\r\n   - [x] 중복일 경우 F-1\r\n   - [x] 공란일 경우 F-2\r\n<br>\r\n\r\n## 영상\r\n\r\n```youtube\r\nBmHl7y2W9Rw\r\n```\r\n<br>\r\n## 소스코드\r\n```java\r\n\r\n// 회원가입 폼 작성 시 ajax로 중복체크\r\npublic String getLoginIdDup(HttpServletRequest request, HttpServletResponse response) {\r\n\t\t\r\n\t\tMap<String, Object> rs = new HashMap<>();\r\n\t\t\r\n\t\tString loginId = request.getParameter(\"loginId\");\r\n\t\t\r\n\t\tMember member = memberService.getMemberByLoginId(loginId);\r\n\t\t\r\n\t\tString code = null;\r\n\t\tString msg = null;\r\n\t\t\r\n\t\t\r\n\t\tif(member == null) {\r\n\t\t\tcode = \"S-1\";   //S = success의 약자, 숫자는 유형 개념\r\n\t\t\t\t\t\t\t//1이면 일반적인 성공, 2이면 약간 문제는 있지만 성공? 이런 방식\r\n\t\t\tmsg = \"해당 ID는 사용이 가능합니다.\";\r\n\t\t}\r\n\t\tif(member != null){\r\n\t\t\tcode = \"F-1\";\r\n\t\t\tmsg = \"해당 ID는 이미 사용중입니다.\";\r\n\t\t}\r\n\t\tif(loginId.trim().length() == 0){\r\n\t\t\tcode = \"F-2\";\r\n\t\t\tmsg = \"해당 ID는 사용이 불가능합니다.\";\r\n\t\t}\r\n\t\t\r\n\t\trs.put(\"loginId\", loginId);\r\n\t\trs.put(\"code\", code);\r\n\t\trs.put(\"msg\", msg);\r\n\t\t\r\n\t\t//rs 맵리스트를 json방식으로 생성해서 data로 보내기\r\n\t\trequest.setAttribute(\"data\", Util.getJsonText(rs));\r\n\t\t\r\n\t\treturn \"common/pure\";\r\n\t}\r\n\r\n\r\n```\r\n<br>\r\n## doJoinForm.jsp\r\n\r\n```html\r\n\r\n<script>\r\n\t\r\n\t//변수명과 함수명이 같으면 에러발생!!\r\n\tlet checkedDupId = \"\";\r\n\t\r\n\t\r\n\t// 중복체크\r\n\tfunction checkDupId(el){\r\n\t\t//가장 근접한 'form'을 가져오기\r\n\t\t//$(el).parent.parent.parent 방식으로 부모를 찾아도 됨\r\n\t\tconst form = $(el).closest('form').get(0);\r\n\t\t\r\n\t\tconst loginId = form.loginId.value;\r\n\t\t\r\n\t\t\r\n\t\t//ajax 통신으로 보내고 데이터 받기\r\n\t\t$.get(\r\n\t\t\t'getLoginIdDup',  //요청할 주소\r\n\t\t\t{\t\t\r\n\t\t\t\t//\tloginId:loginId도 맞다\r\n\t\t\t\t// 최신 JS에서는 이 방식이 가능함\r\n\t\t\t\tloginId:loginId\r\n\t\t\t},\r\n\t\t\tfunction(data){\r\n\t\t\t\tif( data.code.substring(0,2) == \"S-\"){\r\n\t\t\t\t\talert(data.msg + \" (\" + data.code + \")\");\r\n\t\t\t\t\tcheckedDupId = data.loginId;\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(data.msg + \" (\" + data.code + \")\");\r\n\t\t\t\t//\talert();\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\t'json'\r\n\t\t\r\n\t\t);\r\n\t\t\r\n\t};\r\n\r\n\r\n\t\r\n\t// 폼 공백 체크\r\n\tfunction check(form) {\r\n\t\r\n\t\tif (form.loginId.value.trim().length == 0) {\r\n\t\t\talert(\"ID를 입력해주세요.\");\r\n\t\t\tform.loginId.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (form.loginId.value != checkedDupId) {\r\n\t\t\talert(\"먼저 ID 중복 검사를 해주세요.\");\r\n\t\t\tform.dupIdCheck.focus();\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (form.loginPw.value.trim().length == 0) {\r\n\t\t\talert(\"PW를 입력해주세요.\");\r\n\t\t\tform.loginPw.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (form.loginPw.value != form.loginPwConfirm.value) {\r\n\t\t\talert(\"PW가 일치하지 않습니다. PW를 확인해 주세요.\");\r\n\t\t\tform.loginPwConfirm.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (form.name.value.trim().length == 0) {\r\n\t\t\talert(\"이름을 입력해주세요.\");\r\n\t\t\tform.name.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (form.nickname.value.trim().length == 0) {\r\n\t\t\talert(\"닉네임을 입력해주세요.\");\r\n\t\t\tform.nickname.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (form.email.value.trim().length == 0) {\r\n\t\t\talert(\"e-mail을 입력해주세요.\");\r\n\t\t\tform.email.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (form.cellPhoneNo.value.trim().length == 0) {\r\n\t\t\talert(\"연락처를 입력해주세요.\");\r\n\t\t\tform.cellPhoneNo.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tform.submit();\r\n\t};\r\n</script>\r\n\r\n\r\n<form name=\"form\" onsubmit=\"check(this); return false;\" action=\"doJoin\" method=\"POST\">\r\n\t<span>로그인 ID</span>\r\n\t<br />\r\n\t<input type=\"text\" name=\"loginId\" maxlength=\"50\" placeholder=\"ID 입력\">\r\n\t<button name=\"dupIdCheck\" onclick=\"checkDupId(this);\" type = \"button\">중복체크</button>\r\n\t<br />\r\n\t<span>로그인 PW</span>\r\n\t<br />\r\n\t<input type=\"password\" name=\"loginPw\" maxlength=\"50\"\r\n\t\tplaceholder=\"PW 입력\">\r\n\t<br />\r\n\t<span>로그인 PW 확인</span>\r\n\t<br />\r\n\t<input type=\"password\" name=\"loginPwConfirm\" maxlength=\"50\"\r\n\t\tplaceholder=\"PW 입력\">\r\n\t<br />\r\n\t<span>이름</span>\r\n\t<br />\r\n\t<input type=\"text\" name=\"name\" maxlength=\"50\" placeholder=\"이름 입력\">\r\n\t<br />\r\n\t<span>닉네임</span>\r\n\t<br />\r\n\t<input type=\"text\" name=\"nickname\" maxlength=\"50\" placeholder=\"닉네임 입력\">\r\n\t<br />\r\n\t<span>E-Mail</span>\r\n\t<br />\r\n\t<input type=\"email\" name=\"email\" maxlength=\"100\"\r\n\t\tplaceholder=\"이메일 주소 입력\">\r\n\t<br />\r\n\t<span>연락처</span>\r\n\t<br />\r\n\t<input type=\"number\" name=\"cellPhoneNo\" maxlength=\"50\"\r\n\t\tplaceholder=\"연락처 입력\">\r\n\t<br />\r\n\t<hr />\r\n\t<input type=\"submit\" value=\"회원가입\">\r\n\t<button type=\"button\" onclick=\"history.back();\">뒤로가기</button>\r\n\r\n</form>\r\n\r\n\r\n```","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":22,"regDate":"2021-01-24 22:24:32","updateDate":"2021-01-25 17:23:55","title":"P.BLOG - 개발일지(게시물별 html생성, 게시판 별 게시물리스트 페이지 생성)","body":"# 소스코드: 게시물별 html파일 생성\r\n\r\n```java\r\npackage JDBCtest.service;\r\n\r\nimport java.io.File;\r\nimport java.util.List;\r\n\r\nimport JDBCtest.container.Container;\r\nimport JDBCtest.dto.Article;\r\nimport JDBCtest.dto.Board;\r\nimport JDBCtest.util.Util;\r\n\r\npublic class BuildService {\r\n\r\n\tArticleSerivice articleSerivice;\r\n\tMemberService memberService;\r\n\r\n\tpublic BuildService() {\r\n\t\tarticleSerivice = Container.articleSerivice;\r\n\t\tmemberService = Container.memberService;\r\n\t}\r\n\r\n\tpublic void buildSite() {\r\n\t\t// site라는 폴더가 없을 경우 폴더 생성\r\n\t\tFile site = new File(\"site\");\r\n\t\tFile articleFolder = new File(\"site/article\");\r\n\r\n\t\tif (site.exists() == false) {\r\n\t\t\tsite.mkdir();\r\n\t\t}\r\n\t\tif (articleFolder.exists() == false) {\r\n\t\t\tarticleFolder.mkdir();\r\n\t\t}\r\n\r\n\t\tString head = Util.getFileContents(\"site_template/part/head.html\");\r\n\t\tString foot = Util.getFileContents(\"site_template/part/foot.html\");\r\n\r\n\t\t// 각 게시판 별 게시물리스트 페이지 생성\r\n\t\tList<Board> boards = articleSerivice.getBoards();\r\n\r\n\t\tfor (Board board : boards) {\r\n\t\t\tString fileName = board.code + \"-list-1.html\";\r\n\r\n\t\t\tString html = \"\";\r\n\t\t\tint boardId = Container.session.selectedBoardId;\r\n\r\n\t\t\tList<Article> articles = articleSerivice.getBoardArticlesForPrint(boardId);\r\n\r\n\t\t\tfor (Article article : articles) {\r\n\t\t\t\thtml += \"<tr>\";\r\n\t\t\t\thtml += \"<td>\" + article.id + \"</td>\";\r\n\t\t\t\thtml += \"<td>\" + article.regDate + \"</td>\";\r\n\t\t\t\thtml += \"<td><a href=\\\"\" + article.id + \".html\\\">\" + article.title + \"</a></td>\";\r\n\t\t\t\thtml += \"</tr>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml = head + html + foot;\r\n\r\n\t\t\tUtil.writeFileContents(\"site/article/\" + fileName, html);\r\n\t\t}\r\n\r\n\t\t// 게시물 별 파일 생성\r\n\t\tList<Article> articles = articleSerivice.getArticlesForPrint();\r\n\r\n\t\tfor (Article article : articles) {\r\n\t\t\tBoard board = articleSerivice.getBoardById(article.boardId);\r\n\r\n\t\t\tString fileName = \"article_\" + article.id + \".html\";\r\n\t\t\tString html = \"<meta charset=\\\"UTF-8\\\">\";\r\n\t\t\thtml += \"<div>번호 : \" + article.id + \"</div>\";\r\n\t\t\thtml += \"<div>날짜 : \" + article.regDate + \"</div>\";\r\n\t\t\thtml += \"<div>작성자 : \" + article.extra_memberName + \"</div>\";\r\n\t\t\thtml += \"<div>제목 : \" + article.title + \"</div>\";\r\n\t\t\thtml += \"<div>내용 : \" + article.body + \"</div>\";\r\n\t\t\thtml += \"<div>게시판 : \" + board.name + \" 게시판\" + \"</div>\";\r\n\r\n\t\t\tif (article.id > 1) {\r\n\t\t\t\thtml += \"<div><a href=\\\"article_\" + (article.id - 1) + \".html\\\">이전글</a></div>\";\r\n\t\t\t}\r\n\t\t\tif (article.id != (articles.size())) {\r\n\t\t\t\thtml += \"<div><a href=\\\"article_\" + (article.id + 1) + \".html\\\">다음글</a></div>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml = head + html + foot;\r\n\r\n\t\t\tUtil.writeFileContents(\"site/article/\" + article.id + \".html\", html);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n```\r\n<br>\r\n# 소스코드: 각 게시판 별 게시물리스트 페이지 생성\r\n```java\r\n\r\npackage JDBCtest.service;\r\n\r\nimport java.io.File;\r\nimport java.util.List;\r\n\r\nimport JDBCtest.container.Container;\r\nimport JDBCtest.dto.Article;\r\nimport JDBCtest.dto.Board;\r\nimport JDBCtest.util.Util;\r\n\r\npublic class BuildService {\r\n\r\n\tArticleSerivice articleSerivice;\r\n\tMemberService memberService;\r\n\r\n\tpublic BuildService() {\r\n\t\tarticleSerivice = Container.articleSerivice;\r\n\t\tmemberService = Container.memberService;\r\n\t}\r\n\r\n\tpublic void buildSite() {\r\n\t\t// site라는 폴더가 없을 경우 폴더 생성\r\n\t\tFile site = new File(\"site\");\r\n\t\tFile articleFolder = new File(\"site/article\");\r\n\r\n\t\tif (site.exists() == false) {\r\n\t\t\tsite.mkdir();\r\n\t\t}\r\n\t\tif (articleFolder.exists() == false) {\r\n\t\t\tarticleFolder.mkdir();\r\n\t\t}\r\n\r\n\t\tString head = Util.getFileContents(\"site_template/part/head.html\");\r\n\t\tString foot = Util.getFileContents(\"site_template/part/foot.html\");\r\n\r\n\t\t// 각 게시판 별 게시물리스트 페이지 생성\r\n\t\tList<Board> boards = articleSerivice.getBoards();\r\n\r\n\t\tfor (Board board : boards) {\r\n\t\t\tString fileName = board.code + \"-list-1.html\";\r\n\r\n\t\t\tString html = \"\";\r\n\t\t\tint boardId = Container.session.selectedBoardId;\r\n\r\n\t\t\tString template = Util.getFileContents(\"site_template/article/list.html\");\r\n\t\t\t\r\n\t\t\tList<Article> articles = articleSerivice.getBoardArticlesForPrint(boardId);\r\n\r\n\t\t\tfor (Article article : articles) {\r\n\t\t\t\thtml += \"<tr>\";\r\n\t\t\t\thtml += \"<td>\" + article.id + \"</td>\";\r\n\t\t\t\thtml += \"<td>\" + article.regDate + \"</td>\";\r\n\t\t\t\thtml += \"<td><a href=\\\"\" + article.id + \".html\\\">\" + article.title + \"</a></td>\";\r\n\t\t\t\thtml += \"</tr>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml = template.replace(\"${TR}\", html);\r\n\t\t\t\r\n\t\t\thtml = head + html + foot;\r\n\r\n\t\t\tUtil.writeFileContents(\"site/article/\" + fileName, html);\r\n\t\t}\r\n\r\n\t\t// 게시물 별 파일 생성\r\n\t\tList<Article> articles = articleSerivice.getArticlesForPrint();\r\n\r\n\t\tfor (Article article : articles) {\r\n\t\t\tBoard board = articleSerivice.getBoardById(article.boardId);\r\n\r\n\t//\t\tString fileName = \"article_\" + article.id + \".html\";\r\n\t\t\tString html = \"<meta charset=\\\"UTF-8\\\">\";\r\n\t\t\thtml += \"<div>번호 : \" + article.id + \"</div>\";\r\n\t\t\thtml += \"<div>날짜 : \" + article.regDate + \"</div>\";\r\n\t\t\thtml += \"<div>작성자 : \" + article.extra_memberName + \"</div>\";\r\n\t\t\thtml += \"<div>제목 : \" + article.title + \"</div>\";\r\n\t\t\thtml += \"<div>내용 : \" + article.body + \"</div>\";\r\n\t\t\thtml += \"<div>게시판 : \" + board.name + \" 게시판\" + \"</div>\";\r\n\r\n\t\t\tif (article.id > 1) {\r\n\t\t\t\thtml += \"<div><a href=\\\"article_\" + (article.id - 1) + \".html\\\">이전글</a></div>\";\r\n\t\t\t}\r\n\t\t\tif (article.id != (articles.size())) {\r\n\t\t\t\thtml += \"<div><a href=\\\"article_\" + (article.id + 1) + \".html\\\">다음글</a></div>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml = head + html + foot;\r\n\r\n\t\t\tUtil.writeFileContents(\"site/article/\" + article.id + \".html\", html);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n```","boardId":5,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":23,"regDate":"2021-01-24 23:06:54","updateDate":"2021-01-25 17:23:56","title":"P.JSP - 개발일지(회원정보 페이지 정보별 수정기능 구현, 템플릿 적용)","body":"\r\n# 회원정보 페이지 정보별 수정기능 구현, 템플릿 적용\r\n- [x] 각 정보별 개별 수정\r\n - [x] 각 정보별 개별 수정 폼 노출\r\n- [x] 취소 버튼\r\n - [x] 각 정보별 개별 수정 폼 사라짐\r\n- [x] 공란 체크\r\n- [x] 중복체크(ajax)\r\n  - [x] 중복아닐 경우 S-1\r\n  - [x] 중복일 경우 F-1\r\n  - [x] 공란일 경우 F-2\r\n<br>\r\n\r\n## 영상\r\n\r\n```youtube\r\nZmO_NBaKOqc\r\n```\r\n<br>\r\n## 소스코드\r\n```java\r\n\r\n// 회원 정보 수정\r\n\tpublic String doModifyInfo(HttpServletRequest request, HttpServletResponse response) {\r\n\t\tint id = Integer.parseInt(request.getParameter(\"id\"));\r\n\r\n\t\tString loginId = request.getParameter(\"loginId\");\r\n\t\tString name = request.getParameter(\"name\");\r\n\t\tString nickname = request.getParameter(\"nickname\");\r\n\t\tString email = request.getParameter(\"email\");\r\n\t\tString cellphoneNo = request.getParameter(\"cellphoneNo\");\r\n\r\n\t\tMember member = memberService.getMemberById(id);\r\n\r\n\t\tif (loginId == null) {\r\n\t\t\tloginId = member.getLoginId();\r\n\t\t}\r\n\t\tif (name == null) {\r\n\t\t\tname = member.getName();\r\n\t\t}\r\n\t\tif (nickname == null) {\r\n\t\t\tnickname = member.getNickname();\r\n\t\t}\r\n\t\tif (email == null) {\r\n\t\t\temail = member.getEmail();\r\n\t\t}\r\n\t\tif (cellphoneNo == null) {\r\n\t\t\tcellphoneNo = member.getCellphoneNo();\r\n\t\t}\r\n\r\n\t\tmemberService.doModifyMemberName(id, loginId, name, nickname, email, cellphoneNo);\r\n\r\n\t\trequest.setAttribute(\"alertMsg\", \"수정되었습니다.\");\r\n\t\trequest.setAttribute(\"replaceUrl\", \"../member/showMyPage\");\r\n\t\treturn \"common/redirect\";\r\n\t}\r\n\r\n\r\n```\r\n<br>\r\n## showMyPage.jsp\r\n\r\n```html\r\n\r\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\r\n\tpageEncoding=\"UTF-8\"%>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\r\n\r\n<c:set var=\"pageTitle\" value=\"MyPage\"/>\r\n<%@ include file=\"../../part/head.jspf\" %>\r\n\t\r\n\t<script>\r\n\r\n\t//아이디 중복체크\r\n\tlet checkedDupId = \"\";\r\n\r\n\tfunction checkDupId(el){\r\n\t\tconst form = $(el).closest('form').get(0);\r\n\t\t\r\n\t\tconst loginId = form.loginId.value;\r\n\r\n\t\t$.get(\r\n\t\t\t'getLoginIdDup',  \r\n\t\t\t{\t\t\r\n\t\t\t\tloginId:loginId\r\n\t\t\t},\r\n\t\t\tfunction(data){\r\n\t\t\t\tif( data.code.substring(0,2) == \"S-\"){\r\n\t\t\t\t\talert(data.msg + \" (\" + data.code + \")\");\r\n\t\t\t\t\tcheckedDupId = data.loginId;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(data.msg + \" (\" + data.code + \")\");\r\n\t\t\t\t//\talert();\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\t'json'\r\n\t\t);\r\n\t};\r\n\t\r\n\r\n\t\r\n\t// 닉네임 중복체크\r\n\tlet checkedDupNick = \"\";\r\n\r\n\tfunction checkDupNick(el){\r\n\t\tconst form = $(el).closest('form').get(0);\r\n\t\tconst nickname = form.nickname.value;\r\n\r\n\t\t$.get(\r\n\t\t\t'getNicknameDup',  //요청할 주소\r\n\t\t\t{\t\t\r\n\t\t\t\tnickname:nickname\r\n\t\t\t},\r\n\t\t\tfunction(data){\r\n\t\t\t\tif( data.code.substring(0,2) == \"S-\"){\r\n\t\t\t\t\talert(data.msg + \" (\" + data.code + \")\");\r\n\t\t\t\t\tcheckedDupNick = data.nickname;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(data.msg + \" (\" + data.code + \")\");\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\t'json'\r\n\t\t);\t\r\n\t};\r\n\r\n\r\n\t// 아이디 폼 공백 체크\r\n\tfunction check0(form) {\r\n\t\t\r\n\t\tif (form0.loginId.value.trim().length == 0) {\r\n\t\t\talert(\"ID를 입력해주세요.\");\r\n\t\t\tform0.loginId.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (form0.loginId.value != checkedDupId) {\r\n\t\t\talert(\"먼저 ID 중복체크를 해주세요.\");\r\n\t\t\tform0.dupIdCheck.focus();\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tform0.submit();\r\n\t};\r\n\r\n\t\r\n\t// 이름 폼 공백 체크\r\n\tfunction check1(form) {\r\n\t\t\r\n\t\tif (form1.name.value.trim().length == 0) {\r\n\t\t\talert(\"이름을 입력해주세요.\");\r\n\t\t\tform1.name.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tform1.submit();\r\n\t};\r\n\r\n\t// 닉네임 폼 공백 체크\r\n\tfunction check2(form) {\r\n\t\tif (form2.nickname.value.trim().length == 0) {\r\n\t\t\talert(\"닉네임을 입력해주세요.\");\r\n\t\t\tform2.nickname.focus();\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (form2.nickname.value != checkedDupNick) {\r\n\t\t\talert(\"먼저 중복체크를 해주세요.\");\r\n\t\t\tform2.dupNickCheck.focus();\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tform2.submit();\r\n\t};\r\n\t\r\n\t\r\n\t// 이메일 폼 공백 체크\r\n\tfunction check3(form) {\t\t\r\n\t\tif (form3.email.value.trim().length == 0) {\r\n\t\t\talert(\"e-mail을 입력해주세요.\");\r\n\t\t\tform3.email.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tform3.submit();\r\n\t};\r\n\t\r\n\t// 연락처 폼 공백 체크\r\n\tfunction check4(form) {\r\n\t\t\r\n\t\tif (form4.cellphoneNo.value.trim().length == 0) {\r\n\t\t\talert(\"연락처를 입력해주세요.\");\r\n\t\t\tform4.cellphoneNo.focus();\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tform4.submit();\r\n\t};\r\n</script>\r\n\t\r\n  <!-- 메인 컨텐츠 박스 시작 -->\r\n  <main class=\"main-box flex-grow-1\">\r\n    <section class=\"main-box-section con\">\r\n      <!-- 메인-회원정보 페이지 시작 -->\r\n      <div class=\"section-MyPage min-height-50vh flex flex-jc-c flex-ai-c\">\r\n        <div class=\"section-MyPage-body\">\r\n          <div class=\"MyPage_cell__title\">\r\n            <span>회원번호</span>\r\n          </div>\r\n          <div class=\"MyPage_cell__body\">\r\n            <span>${loginedMember.id}</span>\r\n          </div>\r\n          <div class=\"MyPage_cell__title\">\r\n            <span>회원ID</span>\r\n            <button class =\"infoModifyBtn0\" type = \"button\">수정</button>\r\n          </div>\r\n          <div class=\"MyPage_cell__body\">\r\n            <span class=\"oldLoginIdInfo\">${loginedMember.loginId}</span>\r\n\t\t<form class=\"newLoginIdInfo\" name=\"form0\" onsubmit=\"check0(this); return false;\" action=\"doModifyInfo\" method=\"POST\">\r\n\t\t   <input type=\"hidden\" name=\"id\" value=\"${loginedMember.id}\">\r\n           <input type=\"text\" name=\"loginId\" placeholder=\"${loginedMember.loginId}\">\r\n           <button name=\"dupIdCheck\" onclick=\"checkDupId(this);\" type = \"button\">중복체크</button>\r\n           <input type=\"submit\" onclick=\"if(confirm('정말 변경하시겠습니까?') == false) {return false;}\" value=\"변경\">\r\n           <button class =\"cleModifyBtn0\" type=\"button\">취소</button>\r\n        </form>\r\n          </div>\r\n          <div class=\"MyPage_cell__title\">\r\n            <span>회원이름</span>\r\n            <button class =\"infoModifyBtn1\" type = \"button\">수정</button>\r\n          </div>\r\n          <div class=MyPage_cell__body>\r\n            <span class=\"oldNameInfo\">${loginedMember.name}</span>\r\n            <form class=\"newNameInfo\" name=\"form1\" onsubmit=\"check1(this); return false;\" action=\"doModifyInfo\" method=\"POST\">\r\n\t\t   <input type=\"hidden\" name=\"id\" value=\"${loginedMember.id}\">\r\n           <input type=\"text\" name=\"name\" placeholder=\"${loginedMember.name}\">\r\n           <input type=\"submit\" onclick=\"if(confirm('정말 변경하시겠습니까?') == false) {return false;}\" value=\"변경\">\r\n           <button class =\"cleModifyBtn1\" type=\"button\">취소</button>\r\n        </form>\r\n          </div>\r\n          <div class=MyPage_cell__title>\r\n            <span>닉네임</span>\r\n            <button class =\"infoModifyBtn2\" type = \"button\">수정</button>\r\n          </div>\r\n          <div class=MyPage_cell__body>\r\n            <span class=\"oldNicknameInfo\">${loginedMember.nickname}</span>\r\n            <form class=\"newNicknameInfo\" name=\"form2\" onsubmit=\"check2(this); return false;\" action=\"doModifyInfo\" method=\"POST\">\r\n\t\t\t<input type=\"hidden\" name=\"id\" value=\"${loginedMember.id}\">\r\n\t\t\t<input type=\"text\" name=\"nickname\" placeholder=\"${loginedMember.nickname}\">\r\n\t\t\t<button name=\"dupNickCheck\" onclick=\"checkDupNick(this);\" type = \"button\">중복체크</button>\r\n\t\t\t<input type=\"submit\" onclick=\"if(confirm('정말 변경하시겠습니까?') == false) {return false;}\"  value=\"변경\">\r\n              <button class =\"cleModifyBtn2\" type=\"button\">취소</button>\r\n        </form>\r\n          </div>\r\n          <div class=MyPage_cell__title>\r\n            <span>e-Mail</span>\r\n            <button class =\"infoModifyBtn3\" type = \"button\">수정</button>\r\n          </div>\r\n          <div class=MyPage_cell__body>\r\n            <span class=\"oldEmailInfo\">${loginedMember.email}</span>\r\n            <form class=\"newEmailInfo\" name=\"form3\" onsubmit=\"check3(this); return false;\" action=\"doModifyInfo\" method=\"POST\">\r\n\t\t   <input type=\"hidden\" name=\"id\" value=\"${loginedMember.id}\">\r\n           <input type=\"email\" name=\"email\" placeholder=\"${loginedMember.email}\">\r\n           <input type=\"submit\" onclick=\"if(confirm('정말 변경하시겠습니까?') == false) {return false;}\" value=\"변경\">\r\n              <button class =\"cleModifyBtn3\" type=\"button\">취소</button>\r\n        </form>\r\n          </div>\r\n          <div class=MyPage_cell__title>\r\n            <span>연락처</span>\r\n            <button class =\"infoModifyBtn4\" type = \"button\">수정</button>\r\n          </div>\r\n          <div class=MyPage_cell__body>\r\n            <span class=\"oldPhoneInfo\">${loginedMember.cellphoneNo}</span>\r\n            <form class=\"newPhoneInfo\" name=\"form4\" onsubmit=\"check4(this); return false;\" action=\"doModifyInfo\" method=\"POST\">\r\n\t\t   <input type=\"hidden\" name=\"id\" value=\"${loginedMember.id}\">\r\n           <input type=\"number\" name=\"cellphoneNo\" placeholder=\"${loginedMember.cellphoneNo}\">\r\n           <input type=\"submit\" onclick=\"if(confirm('정말 변경하시겠습니까?') == false) {return false;}\" value=\"변경\">\r\n              <button class =\"cleModifyBtn4\" type=\"button\">취소</button>\r\n        </form>\r\n          </div>\r\n          <div class=MyPage_cell__title>\r\n            <span>회원등급</span>\r\n          </div>\r\n          <div class=MyPage_cell__body>\r\n            <span>${loginedMember.authLevel}</span>\r\n          </div>\r\n          <div class=MyPage_cell__title>\r\n            <span>회원가입일</span>\r\n          </div>\r\n          <div class=MyPage_cell__body>\r\n            <span>${loginedMember.regDate}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 메인-회원가입 페이지 끝 -->\r\n    </section>\r\n  </main>\r\n  <!-- 메인 컨텐츠 박스 끝 -->\r\n<%@ include file=\"../../part/foot.jspf\" %>\r\n\r\n```","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0},{"id":24,"regDate":"2021-01-24 23:07:18","updateDate":"2021-01-25 17:23:56","title":"P.JSP - 개발일지(회원가입시 축하메일 발송 기능 추가)","body":"\r\n# 회원가입시 축하메일 발송 기능 추가\r\n- [x] 회원가입 시 자동발송\r\n<br>\r\n\r\n## 영상\r\n\r\n```youtube\r\nvWfaKVilc04\r\n```\r\n<br>\r\n## 소스코드\r\n```java\r\n\r\n// 회원가입\r\n\tpublic String doJoin(HttpServletRequest request, HttpServletResponse response) {\r\n\r\n\t\tString loginId = request.getParameter(\"loginId\");\r\n\t\tString loginPw = request.getParameter(\"loginPw\");\r\n\t\tString name = request.getParameter(\"name\");\r\n\t\tString nickname = request.getParameter(\"nickname\");\r\n\t\tString email = request.getParameter(\"email\");\r\n\t\tString cellPhoneNo = request.getParameter(\"cellPhoneNo\");\r\n\r\n\t\tList<Member> members = memberService.getMemberListForPrint();\r\n\r\n\t\t// 해당 loginId가 사용가능한지 중복확인\r\n\t\tfor (int i = 0; i < members.size(); i++) {\r\n\t\t\tif (members.get(i).getLoginId().equals(loginId) == true) {\r\n\t\t\t\trequest.setAttribute(\"alertMsg\", \"해당 아이디는 이미 사용중인 아이디입니다.\");\r\n\t\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\t\treturn \"common/redirect\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 해당 nickname이 사용가능한지 중복확인\r\n\t\tfor (int i = 0; i < members.size(); i++) {\r\n\t\t\tif (members.get(i).getNickname().equals(nickname) == true) {\r\n\t\t\t\trequest.setAttribute(\"alertMsg\", \"해당 닉네임는 이미 사용중인 닉네임입니다.\");\r\n\t\t\t\trequest.setAttribute(\"historyBack\", true); // historyBack: 뒤로 돌아가기\r\n\t\t\t\treturn \"common/redirect\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMap<String, Object> joinArg = new HashMap<>();\r\n\t\tjoinArg.put(\"loginId\", loginId);\r\n\t\tjoinArg.put(\"loginPw\", loginPw);\r\n\t\tjoinArg.put(\"name\", name);\r\n\t\tjoinArg.put(\"nickname\", nickname);\r\n\t\tjoinArg.put(\"email\", email);\r\n\t\tjoinArg.put(\"cellPhoneNo\", cellPhoneNo);\r\n\r\n\t\t// 신규 회원가입\r\n\t\tint id = memberService.join(joinArg);\r\n\r\n\t\t// 생성 알림창 보여주고 회원정보로 이동하기\r\n\t\trequest.setAttribute(\"alertMsg\", id + \"번 회원님 반갑습니다.\");\r\n\r\n\t\tMember member = memberService.getMemberById(id);\r\n\r\n\t\trequest.setAttribute(\"member\", member);\r\n\r\n\t\t// 회원가입시 축하메일 발송\r\n\t\tEmailService emailService = Container.emailService;\r\n\r\n\t\temailService.send(email, nickname + \"님, 회원가입을 축하드립니다.\", nickname + \"님, 회원가입을 축하드립니다.\");\r\n\r\n\t\treturn \"usr/member/doJoin\";\r\n\r\n\t}\r\n\r\n\r\n```\r\n\r\n<br>\r\n## Util.java\r\n\r\n```java\r\n\r\n//메일 보내는 유틸\r\n\tpublic static int sendMail(String smtpServerId, String smtpServerPw, String from, String fromName, String to, String title, String body) {\r\n\t\tProperties prop = System.getProperties();\r\n\t\tprop.put(\"mail.smtp.starttls.enable\", \"true\");\r\n\t\tprop.put(\"mail.smtp.host\", \"smtp.gmail.com\");\r\n\t\tprop.put(\"mail.smtp.auth\", \"true\");\r\n\t\tprop.put(\"mail.smtp.port\", \"587\");\r\n\r\n\t\tAuthenticator auth = new MailAuth(smtpServerId, smtpServerPw);\r\n\r\n\t\tSession session = Session.getDefaultInstance(prop, auth);\r\n\r\n\t\tMimeMessage msg = new MimeMessage(session);\r\n\r\n\t\ttry {\r\n\t\t\tmsg.setSentDate(new Date());\r\n\r\n\t\t\tmsg.setFrom(new InternetAddress(from, fromName));\r\n\t\t\tmsg.setRecipient(Message.RecipientType.TO, new InternetAddress(to));\r\n\t\t\tmsg.setSubject(title, \"UTF-8\");\r\n\t\t\tmsg.setContent(body, \"text/html; charset=UTF-8\");\r\n\r\n\t\t\tTransport.send(msg);\r\n\r\n\t\t} catch (AddressException ae) {\r\n\t\t\tSystem.out.println(\"AddressException : \" + ae.getMessage());\r\n\t\t\treturn -1;\r\n\t\t} catch (MessagingException me) {\r\n\t\t\tSystem.out.println(\"MessagingException : \" + me.getMessage());\r\n\t\t\treturn -2;\r\n\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\tSystem.out.println(\"UnsupportedEncodingException : \" + e.getMessage());\r\n\t\t\treturn -3;\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t}\r\n\r\n\r\n```","boardId":6,"extra_boardName":null,"extra_boardCode":null,"memberId":1,"extra_memberName":"Dev_J","likesCount":0,"commentsCount":0,"hitCount":0}]